openapi: 3.0.0
info:
  title: Foodin API
  version: 1.0.0
  description: API documentation for Foodin - Ingredient Management System

servers:
  - url: http://localhost:5000/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [user, admin]
        address:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string

    Ingredient:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
          enum: [dairy, meat, vegetables, spices, grains, other]
        image:
          type: string
        stock:
          type: number
        unit:
          type: string
          enum: [kg, g, l, ml, piece]

    Order:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              ingredient:
                type: string
              quantity:
                type: number
              price:
                type: number
        totalAmount:
          type: number
        status:
          type: string
          enum: [pending, processing, shipped, delivered, cancelled]
        shippingAddress:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            state:
              type: string
            zipCode:
              type: string
            country:
              type: string
        paymentStatus:
          type: string
          enum: [pending, completed, failed]

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                address:
                  $ref: '#/components/schemas/User/properties/address'
      responses:
        '201':
          description: User registered successfully

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /ingredients:
    get:
      tags:
        - Ingredients
      summary: Get all ingredients
      responses:
        '200':
          description: List of ingredients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
    post:
      tags:
        - Ingredients
      summary: Create new ingredient
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category:
                  type: string
                image:
                  type: string
                  format: binary
                stock:
                  type: number
                unit:
                  type: string
      responses:
        '201':
          description: Ingredient created successfully

  /orders:
    get:
      tags:
        - Orders
      summary: Get user orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - Orders
      summary: Create new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully 